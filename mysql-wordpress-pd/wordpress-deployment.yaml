# Defines the load balancer
apiVersion: v1
kind: Service
metadata:
  name: wordpress # Registers the name "Wordpress" on the cluster DNS. You can ping it using this name.
  labels:
    app: wordpress
spec:
  ports:
    - port: 80 # Load balancer sits on port 80
  selector:
    app: wordpress # Proxy traffic (send communication) to pods with the label "wordpress" "frontend"
    tier: frontend
  type: LoadBalancer # On a public cloud platform like Azure, this tag will provision you a load balancer with a public DNS of the native type for that service
---
# Defines storage
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: wp-pv-claim
  labels:
    app: wordpress
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
# Defines the front end deployment. 
apiVersion: apps/v1 #  for k8s versions before 1.9.0 use apps/v1beta2  and before 1.8.0 use extensions/v1beta1
kind: Deployment # Tells the app how to deploy as pods.
metadata:
  name: wordpress
  labels:
    app: wordpress
spec:
  selector:
    matchLabels:
      app: wordpress
      tier: frontend
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: wordpress # Labels indicating to load balancer that they should send traffic here
        tier: frontend
    spec:
      containers:
      # Front end speaks to back end defined here
      - image: wordpress:4.8-apache
        name: wordpress
        env:
        - name: WORDPRESS_DB_HOST
          value: wordpress-mysql
        - name: WORDPRESS_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-pass
              key: password
        ports:
        # More storage
        - containerPort: 80 # Configured to listen on port 80
          name: wordpress
        volumeMounts:
        - name: wordpress-persistent-storage
          mountPath: /var/www/html
      volumes:
      - name: wordpress-persistent-storage
        persistentVolumeClaim:
          claimName: wp-pv-claim
